-- Q1. What is the total revenue generated by male vs. female customers?
select gender, sum(purchase_amount) revenue_generated 
from customer
group by gender


-- Q2. Which customers used a discount but still spent more than the average purchase amount?
SELECT 
    customer_id,
    purchase_amount,
    discount_applied
FROM 
    customer
WHERE 
    discount_applied = 'Yes'
    AND purchase_amount > (SELECT AVG(purchase_amount) FROM customer);


-- Q3. Which are the top 5 products with the highest average review rating?
select 
item_purchased,
category ,
ROUND(AVG(review_rating::INTEGER), 2) AS average_review_rating
from customer
group by item_purchased,category
order by average_review_rating desc
limit 5;
        
-- Q4. Compare the average Purchase Amounts between Standard and Express Shipping.
select shipping_type, round(avg(purchase_amount),2) as avg_pur_amount

from customer

where shipping_type in('Standard','Express')
group by shipping_type


-- Q5. Do subscribed customers spend more? Compare average spend and total revenue between subscribers and non-subscribers.
select subscription_status, round(avg(purchase_amount),2) avg_pur_amount, sum(purchase_amount) total_rev
from customer
group by subscription_status

-- Q6. Which 5 products have the highest percentage of purchases with discounts applied?

SELECT 
    item_purchased,
    category,
    ROUND(
        100.0 * SUM(CASE WHEN discount_applied = 'Yes' THEN 1 ELSE 0 END) 
        / COUNT(*), 
    2) AS discount_percentage
FROM 
    customer
GROUP BY 
    item_purchased, category
ORDER BY 
    discount_percentage DESC
LIMIT 5;



-- Q7. Segment customers into New, Returning, and Loyal based on their total number of previous purchases, and show the count of each segment.


SELECT 
    CASE 
        WHEN previous_purchases = 1 THEN 'New'
        WHEN previous_purchases BETWEEN 2 AND 4 THEN 'Returning'
        WHEN previous_purchases >= 5 THEN 'Loyal'
    END AS customer_segment,
    COUNT(customer_id) AS customer_count
FROM 
    customer
GROUP BY 
    CASE 
        WHEN previous_purchases = 1 THEN 'New'
        WHEN previous_purchases BETWEEN 2 AND 4 THEN 'Returning'
        WHEN previous_purchases >= 5 THEN 'Loyal'
    END;
